name: Build, Test, and Analyze

on:
  push:
    branches:
      - main
      - develop

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest

    container: mntmtt/sourcevaultdev:latest

    steps:
      - name: Check out source code
        uses: actions/checkout@v4
        with:
          # Fetch all history for all branches. This is required for SonarQube's analysis.
          fetch-depth: 0

      - name: Configure and Build Project
        run: |
          build-wrapper-linux-x86-64 --out-dir bw-output cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS=--coverage
          build-wrapper-linux-x86-64 --out-dir bw-output cmake --build build -j$(nproc)

      - name: Run Tests & Generate Coverage
        run: |
          cd build
          ctest --extra-verbose
          lcov --gcov-tool /usr/bin/gcov-11 \
            --capture \
            --directory . \
            --output-file coverage-report.lcov \
            --ignore-errors inconsistent
          lcov --remove coverage-report.lcov '/usr/*' --output-file coverage-report.lcov \
            --ignore-errors inconsistent
          cd ..

      - name: Run SonarQube Scanner
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.projectKey=mantomat_sourcevault
            -Dsonar.organization=mantomat
            -Dsonar.sources=src
            -Dsonar.tests=tests
            -Dsonar.cfamily.build-wrapper-output=bw-output
            -Dsonar.cfamily.lcov.reportPaths=build/coverage-report.lcov
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.exclusions=**/moc_*.cpp, **/ui_*.h, **/qrc_*.cpp
